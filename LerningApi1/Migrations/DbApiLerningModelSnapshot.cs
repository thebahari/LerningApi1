// <auto-generated />
using LerningApi1.DbContex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LerningApi1.Migrations
{
    [DbContext(typeof(DbApiLerning))]
    partial class DbApiLerningModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LerningApi1.Entities.Cities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "this is Shiraz city",
                            Name = "Shiraz"
                        },
                        new
                        {
                            Id = 2,
                            Description = "this is Tehran city",
                            Name = "Tehran"
                        },
                        new
                        {
                            Id = 3,
                            Description = "this is mashhad city",
                            Name = "MAshhad"
                        });
                });

            modelBuilder.Entity("LerningApi1.Entities.PlaceOfCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PlaceOfCity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "this is Garden",
                            Name = "eram"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "this is mansion",
                            Name = "emarat shapoori"
                        });
                });

            modelBuilder.Entity("LerningApi1.Entities.PlaceOfCity", b =>
                {
                    b.HasOne("LerningApi1.Entities.Cities", "Cities")
                        .WithMany("placeOfCities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("LerningApi1.Entities.Cities", b =>
                {
                    b.Navigation("placeOfCities");
                });
#pragma warning restore 612, 618
        }
    }
}
